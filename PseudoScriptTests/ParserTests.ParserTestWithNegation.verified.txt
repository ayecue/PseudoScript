{
  body: [
    {
      variable: {
        name: test,
        type: Identifier,
        start: {
          line: 1,
          character: 1
        },
        end: {
          line: 1,
          character: 5
        }
      },
      init: {
        op: +,
        left: {
          op: +,
          left: {
            op: +,
            left: {
              op: -,
              arg: {
                value: 1.0,
                raw: 1,
                type: NumericLiteral,
                start: {
                  line: 1,
                  character: 9
                },
                end: {
                  line: 1,
                  character: 10
                }
              },
              type: BinaryNegatedExpression,
              start: {
                line: 1,
                character: 8
              },
              end: {
                line: 1,
                character: 12
              }
            },
            right: {
              value: 2.0,
              raw: 2,
              type: NumericLiteral,
              start: {
                line: 1,
                character: 13
              },
              end: {
                line: 1,
                character: 14
              }
            },
            type: BinaryExpression,
            start: {
              line: 1,
              character: 11
            },
            end: {
              line: 1,
              character: 16
            }
          },
          right: {
            op: -,
            arg: {
              value: 2.0,
              raw: 2,
              type: NumericLiteral,
              start: {
                line: 1,
                character: 18
              },
              end: {
                line: 1,
                character: 19
              }
            },
            type: BinaryNegatedExpression,
            start: {
              line: 1,
              character: 17
            },
            end: {
              line: 1,
              character: 21
            }
          },
          type: BinaryExpression,
          start: {
            line: 1,
            character: 11
          },
          end: {
            line: 1,
            character: 21
          }
        },
        right: {
          op: +,
          arg: {
            value: 3.0,
            raw: 3,
            type: NumericLiteral,
            start: {
              line: 1,
              character: 23
            },
            end: {
              line: 1,
              character: 24
            }
          },
          type: BinaryNegatedExpression,
          start: {
            line: 1,
            character: 22
          },
          end: {
            line: 1,
            character: 24
          }
        },
        type: BinaryExpression,
        start: {
          line: 1,
          character: 11
        },
        end: {
          line: 1,
          character: 24
        }
      },
      type: AssignmentStatement,
      start: {
        line: 1,
        character: 1
      },
      end: {
        line: 1,
        character: 24
      }
    },
    {
      variable: {
        name: foo,
        type: Identifier,
        start: {
          line: 2,
          character: 1
        },
        end: {
          line: 2,
          character: 4
        }
      },
      init: {
        fields: [
          {
            value: {
              op: -,
              arg: {
                value: 1.0,
                raw: 1,
                type: NumericLiteral,
                start: {
                  line: 2,
                  character: 9
                },
                end: {
                  line: 2,
                  character: 10
                }
              },
              type: BinaryNegatedExpression,
              start: {
                line: 2,
                character: 8
              },
              end: {
                line: 2,
                character: 11
              }
            },
            type: ListValue,
            start: {
              line: 2,
              character: 8
            },
            end: {
              line: 2,
              character: 11
            }
          },
          {
            value: {
              op: +,
              left: {
                op: -,
                arg: {
                  value: 2.0,
                  raw: 2,
                  type: NumericLiteral,
                  start: {
                    line: 2,
                    character: 13
                  },
                  end: {
                    line: 2,
                    character: 14
                  }
                },
                type: BinaryNegatedExpression,
                start: {
                  line: 2,
                  character: 12
                },
                end: {
                  line: 2,
                  character: 16
                }
              },
              right: {
                value: 4.0,
                raw: 4,
                type: NumericLiteral,
                start: {
                  line: 2,
                  character: 17
                },
                end: {
                  line: 2,
                  character: 18
                }
              },
              type: BinaryExpression,
              start: {
                line: 2,
                character: 15
              },
              end: {
                line: 2,
                character: 19
              }
            },
            type: ListValue,
            start: {
              line: 2,
              character: 15
            },
            end: {
              line: 2,
              character: 19
            }
          },
          {
            value: {
              op: +,
              left: {
                op: +,
                left: {
                  op: -,
                  arg: {
                    value: 2.0,
                    raw: 2,
                    type: NumericLiteral,
                    start: {
                      line: 2,
                      character: 22
                    },
                    end: {
                      line: 2,
                      character: 23
                    }
                  },
                  type: BinaryNegatedExpression,
                  start: {
                    line: 2,
                    character: 21
                  },
                  end: {
                    line: 2,
                    character: 24
                  }
                },
                right: {
                  op: -,
                  arg: {
                    value: 4.0,
                    raw: 4,
                    type: NumericLiteral,
                    start: {
                      line: 2,
                      character: 28
                    },
                    end: {
                      line: 2,
                      character: 29
                    }
                  },
                  type: BinaryNegatedExpression,
                  start: {
                    line: 2,
                    character: 27
                  },
                  end: {
                    line: 2,
                    character: 31
                  }
                },
                type: BinaryExpression,
                start: {
                  line: 2,
                  character: 25
                },
                end: {
                  line: 2,
                  character: 31
                }
              },
              right: {
                op: +,
                arg: {
                  value: 6.0,
                  raw: 6,
                  type: NumericLiteral,
                  start: {
                    line: 2,
                    character: 33
                  },
                  end: {
                    line: 2,
                    character: 34
                  }
                },
                type: BinaryNegatedExpression,
                start: {
                  line: 2,
                  character: 32
                },
                end: {
                  line: 2,
                  character: 35
                }
              },
              type: BinaryExpression,
              start: {
                line: 2,
                character: 25
              },
              end: {
                line: 2,
                character: 35
              }
            },
            type: ListValue,
            start: {
              line: 2,
              character: 25
            },
            end: {
              line: 2,
              character: 35
            }
          }
        ],
        type: ListConstructorExpression,
        start: {
          line: 2,
          character: 7
        },
        end: {
          line: 2,
          character: 35
        }
      },
      type: AssignmentStatement,
      start: {
        line: 2,
        character: 1
      },
      end: {
        line: 2,
        character: 35
      }
    },
    {
      expression: {
        origin: {
          name: print,
          type: Identifier,
          start: {
            line: 4,
            character: 1
          },
          end: {
            line: 4,
            character: 6
          }
        },
        arguments: [
          {
            name: test,
            type: Identifier,
            start: {
              line: 4,
              character: 7
            },
            end: {
              line: 4,
              character: 11
            }
          }
        ],
        type: CallExpression,
        start: {
          line: 4,
          character: 6
        },
        end: {
          line: 4,
          character: 12
        }
      },
      type: CallStatement,
      start: {
        line: 4,
        character: 1
      },
      end: {
        line: 4,
        character: 12
      }
    },
    {
      expression: {
        origin: {
          name: print,
          type: Identifier,
          start: {
            line: 5,
            character: 1
          },
          end: {
            line: 5,
            character: 6
          }
        },
        arguments: [
          {
            name: foo,
            type: Identifier,
            start: {
              line: 5,
              character: 7
            },
            end: {
              line: 5,
              character: 10
            }
          }
        ],
        type: CallExpression,
        start: {
          line: 5,
          character: 6
        },
        end: {
          line: 5,
          character: 11
        }
      },
      type: CallStatement,
      start: {
        line: 5,
        character: 1
      },
      end: {
        line: 5,
        character: 11
      }
    }
  ],
  namespaces: [
    test,
    foo,
    print
  ],
  literals: [
    {
      value: 1.0,
      raw: 1,
      type: NumericLiteral,
      start: {
        line: 1,
        character: 9
      },
      end: {
        line: 1,
        character: 10
      }
    },
    {
      value: 2.0,
      raw: 2,
      type: NumericLiteral,
      start: {
        line: 1,
        character: 13
      },
      end: {
        line: 1,
        character: 14
      }
    },
    {
      value: 2.0,
      raw: 2,
      type: NumericLiteral,
      start: {
        line: 1,
        character: 18
      },
      end: {
        line: 1,
        character: 19
      }
    },
    {
      value: 3.0,
      raw: 3,
      type: NumericLiteral,
      start: {
        line: 1,
        character: 23
      },
      end: {
        line: 1,
        character: 24
      }
    },
    {
      value: 1.0,
      raw: 1,
      type: NumericLiteral,
      start: {
        line: 2,
        character: 9
      },
      end: {
        line: 2,
        character: 10
      }
    },
    {
      value: 2.0,
      raw: 2,
      type: NumericLiteral,
      start: {
        line: 2,
        character: 13
      },
      end: {
        line: 2,
        character: 14
      }
    },
    {
      value: 4.0,
      raw: 4,
      type: NumericLiteral,
      start: {
        line: 2,
        character: 17
      },
      end: {
        line: 2,
        character: 18
      }
    },
    {
      value: 2.0,
      raw: 2,
      type: NumericLiteral,
      start: {
        line: 2,
        character: 22
      },
      end: {
        line: 2,
        character: 23
      }
    },
    {
      value: 4.0,
      raw: 4,
      type: NumericLiteral,
      start: {
        line: 2,
        character: 28
      },
      end: {
        line: 2,
        character: 29
      }
    },
    {
      value: 6.0,
      raw: 6,
      type: NumericLiteral,
      start: {
        line: 2,
        character: 33
      },
      end: {
        line: 2,
        character: 34
      }
    }
  ],
  type: Chunk,
  start: {
    line: 1,
    character: 1
  },
  end: {
    line: 5,
    character: 11
  }
}