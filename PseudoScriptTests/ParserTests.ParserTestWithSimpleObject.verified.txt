{
  body: [
    {
      variable: {
        name: test,
        type: Identifier,
        start: {
          line: 1,
          character: 1
        },
        end: {
          line: 1,
          character: 5
        }
      },
      init: {
        type: MapConstructorExpression,
        start: {
          line: 1,
          character: 8
        },
        end: {
          line: 1,
          character: 10
        }
      },
      type: AssignmentStatement,
      start: {
        line: 1,
        character: 1
      },
      end: {
        line: 1,
        character: 10
      }
    },
    {
      variable: {
        origin: {
          name: test,
          type: Identifier,
          start: {
            line: 3,
            character: 1
          },
          end: {
            line: 3,
            character: 5
          }
        },
        indexer: .,
        identifier: {
          name: here,
          type: Identifier,
          start: {
            line: 3,
            character: 6
          },
          end: {
            line: 3,
            character: 10
          }
        },
        type: MemberExpression,
        start: {
          line: 3,
          character: 5
        },
        end: {
          line: 3,
          character: 12
        }
      },
      init: {
        value: was,
        raw: "was",
        type: StringLiteral,
        start: {
          line: 3,
          character: 13
        },
        end: {
          line: 3,
          character: 18
        }
      },
      type: AssignmentStatement,
      start: {
        line: 3,
        character: 1
      },
      end: {
        line: 3,
        character: 18
      }
    },
    {
      variable: {
        origin: {
          name: test,
          type: Identifier,
          start: {
            line: 5,
            character: 1
          },
          end: {
            line: 5,
            character: 5
          }
        },
        indexer: .,
        identifier: {
          name: was,
          type: Identifier,
          start: {
            line: 5,
            character: 6
          },
          end: {
            line: 5,
            character: 9
          }
        },
        type: MemberExpression,
        start: {
          line: 5,
          character: 5
        },
        end: {
          line: 5,
          character: 11
        }
      },
      init: {
        body: [
          {
            expression: {
              origin: {
                name: print,
                type: Identifier,
                start: {
                  line: 6,
                  character: 2
                },
                end: {
                  line: 6,
                  character: 7
                }
              },
              arguments: [
                {
                  origin: {
                    name: self,
                    type: Identifier,
                    start: {
                      line: 6,
                      character: 8
                    },
                    end: {
                      line: 6,
                      character: 12
                    }
                  },
                  indexer: .,
                  identifier: {
                    name: here,
                    type: Identifier,
                    start: {
                      line: 6,
                      character: 13
                    },
                    end: {
                      line: 6,
                      character: 17
                    }
                  },
                  type: MemberExpression,
                  start: {
                    line: 6,
                    character: 12
                  },
                  end: {
                    line: 6,
                    character: 18
                  }
                }
              ],
              type: CallExpression,
              start: {
                line: 6,
                character: 7
              },
              end: {
                line: 6,
                character: 18
              }
            },
            type: CallStatement,
            start: {
              line: 6,
              character: 2
            },
            end: {
              line: 6,
              character: 18
            }
          }
        ],
        name: anonymous,
        type: FunctionDeclaration,
        start: {
          line: 5,
          character: 12
        },
        end: {
          line: 7,
          character: 13
        }
      },
      type: AssignmentStatement,
      start: {
        line: 5,
        character: 1
      },
      end: {
        line: 7,
        character: 13
      }
    },
    {
      expression: {
        origin: {
          name: print,
          type: Identifier,
          start: {
            line: 9,
            character: 1
          },
          end: {
            line: 9,
            character: 6
          }
        },
        arguments: [
          {
            origin: {
              origin: {
                name: test,
                type: Identifier,
                start: {
                  line: 9,
                  character: 7
                },
                end: {
                  line: 9,
                  character: 11
                }
              },
              indexer: .,
              identifier: {
                name: was,
                type: Identifier,
                start: {
                  line: 9,
                  character: 12
                },
                end: {
                  line: 9,
                  character: 15
                }
              },
              type: MemberExpression,
              start: {
                line: 9,
                character: 11
              },
              end: {
                line: 9,
                character: 16
              }
            },
            type: CallExpression,
            start: {
              line: 9,
              character: 15
            },
            end: {
              line: 9,
              character: 18
            }
          }
        ],
        type: CallExpression,
        start: {
          line: 9,
          character: 6
        },
        end: {
          line: 9,
          character: 18
        }
      },
      type: CallStatement,
      start: {
        line: 9,
        character: 1
      },
      end: {
        line: 9,
        character: 18
      }
    }
  ],
  namespaces: [
    test,
    here,
    was,
    print,
    self
  ],
  literals: [
    {
      value: was,
      raw: "was",
      type: StringLiteral,
      start: {
        line: 3,
        character: 13
      },
      end: {
        line: 3,
        character: 18
      }
    }
  ],
  type: Chunk,
  start: {
    line: 1,
    character: 1
  },
  end: {
    line: 9,
    character: 18
  }
}