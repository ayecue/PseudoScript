{
  body: [
    {
      expression: {
        variable: {
          name: a,
          type: Identifier,
          start: {
            line: 1,
            character: 1
          },
          end: {
            line: 1,
            character: 2
          }
        },
        init: {
          op: /,
          left: {
            name: a,
            type: Identifier,
            start: {
              line: 1,
              character: 1
            },
            end: {
              line: 1,
              character: 2
            }
          },
          right: {
            name: b,
            type: Identifier,
            start: {
              line: 1,
              character: 6
            },
            end: {
              line: 1,
              character: 7
            }
          },
          type: BinaryExpression,
          start: {
            line: 1,
            character: 6
          },
          end: {
            line: 1,
            character: 8
          }
        },
        type: AssignmentStatement,
        start: {
          line: 1,
          character: 1
        },
        end: {
          line: 1,
          character: 8
        }
      },
      type: CallStatement,
      start: {
        line: 1,
        character: 1
      },
      end: {
        line: 1,
        character: 8
      }
    },
    {
      expression: {
        variable: {
          name: a,
          type: Identifier,
          start: {
            line: 2,
            character: 1
          },
          end: {
            line: 2,
            character: 2
          }
        },
        init: {
          op: *,
          left: {
            name: a,
            type: Identifier,
            start: {
              line: 2,
              character: 1
            },
            end: {
              line: 2,
              character: 2
            }
          },
          right: {
            name: b,
            type: Identifier,
            start: {
              line: 2,
              character: 6
            },
            end: {
              line: 2,
              character: 7
            }
          },
          type: BinaryExpression,
          start: {
            line: 2,
            character: 6
          },
          end: {
            line: 2,
            character: 8
          }
        },
        type: AssignmentStatement,
        start: {
          line: 2,
          character: 1
        },
        end: {
          line: 2,
          character: 8
        }
      },
      type: CallStatement,
      start: {
        line: 2,
        character: 1
      },
      end: {
        line: 2,
        character: 8
      }
    },
    {
      expression: {
        variable: {
          name: a,
          type: Identifier,
          start: {
            line: 3,
            character: 1
          },
          end: {
            line: 3,
            character: 2
          }
        },
        init: {
          op: -,
          left: {
            name: a,
            type: Identifier,
            start: {
              line: 3,
              character: 1
            },
            end: {
              line: 3,
              character: 2
            }
          },
          right: {
            name: b,
            type: Identifier,
            start: {
              line: 3,
              character: 6
            },
            end: {
              line: 3,
              character: 7
            }
          },
          type: BinaryExpression,
          start: {
            line: 3,
            character: 6
          },
          end: {
            line: 3,
            character: 8
          }
        },
        type: AssignmentStatement,
        start: {
          line: 3,
          character: 1
        },
        end: {
          line: 3,
          character: 8
        }
      },
      type: CallStatement,
      start: {
        line: 3,
        character: 1
      },
      end: {
        line: 3,
        character: 8
      }
    },
    {
      expression: {
        variable: {
          name: a,
          type: Identifier,
          start: {
            line: 4,
            character: 1
          },
          end: {
            line: 4,
            character: 2
          }
        },
        init: {
          op: +,
          left: {
            name: a,
            type: Identifier,
            start: {
              line: 4,
              character: 1
            },
            end: {
              line: 4,
              character: 2
            }
          },
          right: {
            name: b,
            type: Identifier,
            start: {
              line: 4,
              character: 6
            },
            end: {
              line: 4,
              character: 7
            }
          },
          type: BinaryExpression,
          start: {
            line: 4,
            character: 6
          },
          end: {
            line: 4,
            character: 8
          }
        },
        type: AssignmentStatement,
        start: {
          line: 4,
          character: 1
        },
        end: {
          line: 4,
          character: 8
        }
      },
      type: CallStatement,
      start: {
        line: 4,
        character: 1
      },
      end: {
        line: 4,
        character: 8
      }
    },
    {
      op: <<,
      left: {
        name: a,
        type: Identifier,
        start: {
          line: 5,
          character: 1
        },
        end: {
          line: 5,
          character: 2
        }
      },
      right: {
        name: b,
        type: Identifier,
        start: {
          line: 5,
          character: 6
        },
        end: {
          line: 5,
          character: 7
        }
      },
      type: BinaryExpression,
      start: {
        line: 5,
        character: 3
      },
      end: {
        line: 5,
        character: 8
      }
    },
    {
      op: >>,
      left: {
        name: a,
        type: Identifier,
        start: {
          line: 6,
          character: 1
        },
        end: {
          line: 6,
          character: 2
        }
      },
      right: {
        name: b,
        type: Identifier,
        start: {
          line: 6,
          character: 6
        },
        end: {
          line: 6,
          character: 7
        }
      },
      type: BinaryExpression,
      start: {
        line: 6,
        character: 3
      },
      end: {
        line: 6,
        character: 8
      }
    },
    {
      variable: {
        name: w,
        type: Identifier,
        start: {
          line: 7,
          character: 1
        },
        end: {
          line: 7,
          character: 2
        }
      },
      init: {
        op: >>,
        left: {
          op: >>>,
          left: {
            name: a,
            type: Identifier,
            start: {
              line: 7,
              character: 5
            },
            end: {
              line: 7,
              character: 6
            }
          },
          right: {
            op: <<,
            left: {
              name: b,
              type: Identifier,
              start: {
                line: 7,
                character: 12
              },
              end: {
                line: 7,
                character: 13
              }
            },
            right: {
              name: c,
              type: Identifier,
              start: {
                line: 7,
                character: 17
              },
              end: {
                line: 7,
                character: 18
              }
            },
            type: BinaryExpression,
            start: {
              line: 7,
              character: 14
            },
            end: {
              line: 7,
              character: 19
            }
          },
          type: BinaryExpression,
          start: {
            line: 7,
            character: 7
          },
          end: {
            line: 7,
            character: 22
          }
        },
        right: {
          name: a,
          type: Identifier,
          start: {
            line: 7,
            character: 23
          },
          end: {
            line: 7,
            character: 24
          }
        },
        type: BinaryExpression,
        start: {
          line: 7,
          character: 7
        },
        end: {
          line: 7,
          character: 25
        }
      },
      type: AssignmentStatement,
      start: {
        line: 7,
        character: 1
      },
      end: {
        line: 7,
        character: 25
      }
    },
    {
      op: |,
      left: {
        name: a,
        type: Identifier,
        start: {
          line: 8,
          character: 1
        },
        end: {
          line: 8,
          character: 2
        }
      },
      right: {
        name: b,
        type: Identifier,
        start: {
          line: 8,
          character: 5
        },
        end: {
          line: 8,
          character: 6
        }
      },
      type: BinaryExpression,
      start: {
        line: 8,
        character: 3
      },
      end: {
        line: 8,
        character: 7
      }
    },
    {
      op: &,
      left: {
        name: a,
        type: Identifier,
        start: {
          line: 9,
          character: 1
        },
        end: {
          line: 9,
          character: 2
        }
      },
      right: {
        name: b,
        type: Identifier,
        start: {
          line: 9,
          character: 5
        },
        end: {
          line: 9,
          character: 6
        }
      },
      type: BinaryExpression,
      start: {
        line: 9,
        character: 3
      },
      end: {
        line: 9,
        character: 7
      }
    },
    {
      op: ^,
      left: {
        name: a,
        type: Identifier,
        start: {
          line: 10,
          character: 1
        },
        end: {
          line: 10,
          character: 2
        }
      },
      right: {
        name: b,
        type: Identifier,
        start: {
          line: 10,
          character: 5
        },
        end: {
          line: 10,
          character: 6
        }
      },
      type: BinaryExpression,
      start: {
        line: 10,
        character: 3
      },
      end: {
        line: 10,
        character: 7
      }
    },
    {
      op: and,
      left: {
        name: a,
        type: Identifier,
        start: {
          line: 11,
          character: 1
        },
        end: {
          line: 11,
          character: 2
        }
      },
      right: {
        name: b,
        type: Identifier,
        start: {
          line: 11,
          character: 7
        },
        end: {
          line: 11,
          character: 8
        }
      },
      type: LogicalExpression,
      start: {
        line: 11,
        character: 3
      },
      end: {
        line: 11,
        character: 9
      }
    },
    {
      op: or,
      left: {
        name: a,
        type: Identifier,
        start: {
          line: 12,
          character: 1
        },
        end: {
          line: 12,
          character: 2
        }
      },
      right: {
        name: b,
        type: Identifier,
        start: {
          line: 12,
          character: 6
        },
        end: {
          line: 12,
          character: 7
        }
      },
      type: LogicalExpression,
      start: {
        line: 12,
        character: 3
      },
      end: {
        line: 12,
        character: 8
      }
    },
    {
      variable: {
        name: a,
        type: Identifier,
        start: {
          line: 13,
          character: 1
        },
        end: {
          line: 13,
          character: 2
        }
      },
      init: {
        value: 0.1,
        raw: 0.1,
        type: NumericLiteral,
        start: {
          line: 13,
          character: 5
        },
        end: {
          line: 13,
          character: 8
        }
      },
      type: AssignmentStatement,
      start: {
        line: 13,
        character: 1
      },
      end: {
        line: 13,
        character: 9
      }
    },
    {
      variable: {
        name: b,
        type: Identifier,
        start: {
          line: 14,
          character: 1
        },
        end: {
          line: 14,
          character: 2
        }
      },
      init: {
        value: 0.1,
        raw: .1,
        type: NumericLiteral,
        start: {
          line: 14,
          character: 5
        },
        end: {
          line: 14,
          character: 7
        }
      },
      type: AssignmentStatement,
      start: {
        line: 14,
        character: 1
      },
      end: {
        line: 14,
        character: 8
      }
    },
    {
      variable: {
        name: c,
        type: Identifier,
        start: {
          line: 15,
          character: 1
        },
        end: {
          line: 15,
          character: 2
        }
      },
      init: {
        value: 0.0,
        raw: 0.1e,
        type: NumericLiteral,
        start: {
          line: 15,
          character: 5
        },
        end: {
          line: 15,
          character: 9
        }
      },
      type: AssignmentStatement,
      start: {
        line: 15,
        character: 1
      },
      end: {
        line: 15,
        character: 9
      }
    }
  ],
  namespaces: [
    a,
    b,
    w,
    c
  ],
  literals: [
    {
      value: 0.1,
      raw: 0.1,
      type: NumericLiteral,
      start: {
        line: 13,
        character: 5
      },
      end: {
        line: 13,
        character: 8
      }
    },
    {
      value: 0.1,
      raw: .1,
      type: NumericLiteral,
      start: {
        line: 14,
        character: 5
      },
      end: {
        line: 14,
        character: 7
      }
    },
    {
      value: 0.0,
      raw: 0.1e,
      type: NumericLiteral,
      start: {
        line: 15,
        character: 5
      },
      end: {
        line: 15,
        character: 9
      }
    }
  ],
  type: Chunk,
  start: {
    line: 1,
    character: 1
  },
  end: {
    line: 15,
    character: 9
  }
}